<?xml version="1.0"?>
<Devices>

  	<Device type="sensor" id="spectrum1728SensorType">
		<Name>Spectrum 1728 Sensor</Name>
		<ConfigUI>
			<!-- The ConfigUI here is just an example of the type of device
			specific UI that might be needed. Here you might specify a text
			field for an IP address, a serial port popup, or other device
			specific options.
			-->
			<Field id="address" type="textfield" defaultValue="123456">
				<Label>Module Address:</Label>
			</Field>
			<Field id="timeout" type="textfield" defaultValue="120">
				<Label>Length in Seconds Before Off :</Label>
			</Field>
			<Field id="SupportsOnState" type="checkbox" defaultValue="false">
				<Label>Show ON/OFF state:</Label>
			</Field>
			<Field id="SupportsSensorValue" type="checkbox" defaultValue="true">
				<Label>Show sensor value state:</Label>
			</Field>
			<Field id="SupportsStatusRequest" type="checkbox" defaultValue="true">
				<Label>Enable status request / refresh button:</Label>
			</Field>
			<Field id="AllowOnStateChange" type="checkbox" defaultValue="false">
				<Label>Enable controls to override on/off state</Label>
			</Field>
			<!-- Hidden because not yet implemented by Indigo, but might have UI to edit
			sensor values at some point. -->
			<Field id="AllowSensorValueChange" type="checkbox" hidden="true" defaultValue="false">
				<Label>Enable controls to override sensor value state</Label>
			</Field>
		</ConfigUI>
		<States>
			<!-- By default sensor type devices automatically inherit:

				onOffState state IF property SupportsOnState is True
				sensorValue state IF property SupportsSensorValue is True

			The plugin can specify additional custom states and custom
			actions (in Actions.xml) to modify custom states. As an example
			here, we define a new custom state, backlightBrightness, which
			is used to control the brightness of the backlit display of
			the module.
			-->

		</States>
	</Device>

</Devices>
